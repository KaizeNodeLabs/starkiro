name: Test Starkiro Contracts

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        project: ['counter_access_control', 'crowdfunding', 'escrow_multiple_recipients', 'flip_flop', 'hello_world', 'random_number_generator', 'sbt', 'simple_counter', 'simple_erc20', 'simple_erc721', 'staking', 'token_vesting']
      max-parallel: 4

    steps:
      - uses: actions/checkout@v4

      - name: Cache Scarb Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/scarb
          key: scarb-${{ runner.os }}-${{ hashFiles('**/Scarb.lock') }}
          restore-keys: |
            scarb-${{ runner.os }}-

      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: "2.9.2"

      - name: Setup Starknet Foundry
        uses: foundry-rs/setup-snfoundry@v3

      - name: Verify Scarb & Snfoundry
        run: |
          if ! command -v scarb &> /dev/null; then
            echo "❌ Scarb is not installed!"
            exit 1
          fi
          if ! command -v snforge &> /dev/null; then
            echo "❌ Starknet Foundry (snforge) is not installed!"
            exit 1
          fi

      - name: Verify contract directory exists
        run: |
          if [ ! -d "./starknet/contracts/${{ matrix.project }}" ]; then
            echo "❌ Directory ./starknet/contracts/${{ matrix.project }} not found!"
            exit 1
          fi

      - name: Build & Test ${{ matrix.project }}
        working-directory: ./starknet/contracts/${{ matrix.project }}
        run: |
          scarb build &  # Run build in background
          snforge test   # Run tests
        continue-on-error: true  

      - name: Upload test logs (Always)
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.project }}
          path: ./starknet/contracts/${{ matrix.project }}/target/
          retention-days: 3
